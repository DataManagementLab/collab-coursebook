# Generated by Django 3.2.5 on 2022-01-24 16:47

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import fontawesome_5.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('image', models.ImageField(blank=True, upload_to='uploads/categories/', verbose_name='Title Image')),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Content',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('type', models.CharField(max_length=30, verbose_name='Type')),
                ('language', models.CharField(choices=[('de', 'German'), ('en', 'English')], max_length=30, verbose_name='Language')),
                ('readonly', models.BooleanField(default=False, help_text="This content shouldn't be edited", verbose_name='Set to Read-Only')),
                ('public', models.BooleanField(default=False, help_text="This content will be displayed in courses that don't require registration", verbose_name='Show in public courses')),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Creation Date')),
                ('preview', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Rendered preview')),
            ],
            options={
                'verbose_name': 'Content',
                'verbose_name_plural': 'Contents',
            },
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True, verbose_name='Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('creation_date', models.DateTimeField(blank=True, default=django.utils.timezone.now, verbose_name='Creation Date')),
                ('image', models.ImageField(blank=True, upload_to='uploads/courses/%Y/%m/%d/', verbose_name='Title Image')),
                ('restrict_changes', models.BooleanField(blank=True, default=False, help_text='This course is restricted and can only be edited by the owners', verbose_name='Edit Restriction')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='courses', to='base.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Course',
                'verbose_name_plural': 'Courses',
                'ordering': ['title'],
            },
        ),
        migrations.CreateModel(
            name='Period',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=150, verbose_name='Title')),
                ('start', models.DateField(verbose_name='start')),
                ('end', models.DateField(verbose_name='end')),
            ],
            options={
                'verbose_name': 'Period',
                'verbose_name_plural': 'Periods',
                'ordering': ['-end', '-start'],
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='auth.user')),
                ('bio', models.TextField(blank=True, verbose_name='Biography')),
                ('pic', models.ImageField(blank=True, upload_to='profile_pics', verbose_name='Profile picture')),
                ('accepted_privacy_note', models.BooleanField(blank=True, default=False, verbose_name='Accepted privacy note?')),
                ('stared_courses', models.ManyToManyField(blank=True, related_name='staring_users', to='base.Course', verbose_name='Stared courses:')),
            ],
            options={
                'verbose_name': 'Profile',
                'verbose_name_plural': 'Profiles',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('symbol', fontawesome_5.fields.IconField(blank=True, help_text='Symbol to show with this tag (optional)', max_length=60, verbose_name='Symbol')),
            ],
            options={
                'verbose_name': 'Tag',
                'verbose_name_plural': 'Tags',
            },
        ),
        migrations.CreateModel(
            name='Topic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, verbose_name='Title')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='topics', to='base.category', verbose_name='Category')),
            ],
            options={
                'verbose_name': 'Topic',
                'verbose_name_plural': 'Topics',
            },
        ),
        migrations.CreateModel(
            name='Rating',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.IntegerField(choices=[(1, 'Very Bad'), (2, 'Bad'), (3, 'OK'), (4, 'Good'), (5, 'Very Good')], verbose_name='Rating')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.content', verbose_name='Rated content')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.profile', verbose_name='Rating user')),
            ],
            options={
                'verbose_name': 'Rating',
                'verbose_name_plural': 'Ratings',
                'unique_together': {('content', 'user')},
            },
        ),
        migrations.CreateModel(
            name='Favorite',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.content', verbose_name='Content')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.course', verbose_name='Course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_favorites', to='base.profile', verbose_name='User')),
            ],
            options={
                'verbose_name': 'Favorite',
                'verbose_name_plural': 'Favorites',
            },
        ),
        migrations.CreateModel(
            name='CourseStructureEntry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.CharField(max_length=50, verbose_name='Index')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='base.course', verbose_name='Course')),
                ('topic', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='child_topic', to='base.topic', verbose_name='Topic')),
            ],
            options={
                'verbose_name': 'Course Structure Entry',
                'verbose_name_plural': 'Course Structure Entries',
            },
        ),
        migrations.AddField(
            model_name='course',
            name='owners',
            field=models.ManyToManyField(related_name='owned_courses', to='base.Profile', verbose_name='Owners'),
        ),
        migrations.AddField(
            model_name='course',
            name='period',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='courses', to='base.period', verbose_name='Period'),
        ),
        migrations.AddField(
            model_name='course',
            name='topics',
            field=models.ManyToManyField(blank=True, related_name='courses', through='base.CourseStructureEntry', to='base.Topic', verbose_name='Topics'),
        ),
        migrations.AddField(
            model_name='content',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='base.profile', verbose_name='Author'),
        ),
        migrations.AddField(
            model_name='content',
            name='ratings',
            field=models.ManyToManyField(through='base.Rating', to='base.Profile'),
        ),
        migrations.AddField(
            model_name='content',
            name='tags',
            field=models.ManyToManyField(blank=True, related_name='contents', to='base.Tag', verbose_name='Tags'),
        ),
        migrations.AddField(
            model_name='content',
            name='topic',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contents', to='base.topic', verbose_name='Topic'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Comment Text')),
                ('creation_date', models.DateTimeField(auto_now_add=True, verbose_name='Creation Date')),
                ('last_edit', models.DateTimeField(auto_now=True, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.profile', verbose_name='Author')),
                ('content', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='base.content', verbose_name='Comment for')),
            ],
            options={
                'verbose_name': 'Comment',
                'verbose_name_plural': 'Comments',
            },
        ),
    ]
